{"version":3,"sources":["jquery.jquery-orgchart.js"],"names":["$","funcFactory","dom","buildNode","json","jsonBuildNode","baseAssignValue","object","key","value","Object","defineProperty","groupBy","collection","iteratee","_","reduce","result","hasOwnProperty","call","push","smartArrayToTree","array","options","assign","id","pid","children","firstPid","groupArray","n","console","log","firstArray","transform","startList","i","length","fn","orgchart","opts","extend","defaults","func","renderType","each","$chartSource","$this","clone","levels","find","andSelf","filter","parsents","levelobjects","remove","data","$container","chartClass","interactive","addClass","$root","is","click","evt","stopImmediatePropagation","replace","container","empty","append","renderData","item","depth","showLevels","stack","hoverClass","nodeText","$node","end","html","isArray","arr","Array","fade","speed","nodeClicked","copyClasses","copyData","copyStyles","copyTitle","$data","$appendTo","level","index","$table","$tbody","$nodeRow","$nodeCell","$childNodes","attr","keys","$adjunct","adjunct","$adjunctDiv","appendTo","$linkDiv","$heading","text","$nodeDiv","$downLineRow","$downLineCell","$downLineTable","$downLineLine","$downLeft","$downRight","hover","removeClass","$linesRow","$left","$right","$childNodesRow","$td","$stackNodes","$list","$stackContainer","after","nextAll","hide","eq","$row","closest","next","fadeOut","fadeIn","show","jQuery","undefined","VERSION","FUNC_ERROR_TEXT","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_PARTIAL_FLAG","INFINITY","MAX_SAFE_INTEGER","argsTag","arrayTag","asyncTag","boolTag","dateTag","errorTag","funcTag","genTag","numberTag","objectTag","proxyTag","regexpTag","stringTag","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","reIsUint","htmlEscapes","freeGlobal","global","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","arrayPush","values","apply","baseFindIndex","predicate","fromIndex","fromRight","baseProperty","basePropertyOf","baseReduce","accumulator","initAccum","eachFunc","baseValues","props","baseMap","escapeHtmlChar","overArg","arg","arrayProto","prototype","objectProto","idCounter","nativeObjectToString","toString","oldDash","objectCreate","create","propertyIsEnumerable","nativeIsFinite","isFinite","nativeKeys","nativeMax","Math","max","lodash","LodashWrapper","baseCreate","proto","isObject","chainAll","__wrapped__","__actions__","__chain__","constructor","assignValue","objValue","baseDelay","wait","args","TypeError","setTimeout","baseEach","createBaseEach","baseForOwn","baseEvery","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","isStrict","isFlattenable","baseFor","createBaseFor","baseFunctions","isFunction","baseGetTag","objectToString","baseGt","other","baseIsArguments","noop","baseIsDate","isObjectLike","baseIsEqual","bitmask","customizer","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objStack","entry","othStack","equalArrays","equalByTag","pop","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsRegExp","baseIteratee","identity","baseMatches","baseLt","isArrayLike","basePick","baseRest","start","setToString","overRest","baseSlice","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","copyObject","isNew","newValue","createAssigner","assigner","sources","iterable","keysFunc","createCtor","Ctor","arguments","thisBinding","createFind","findIndexFunc","createPartial","partials","isBind","wrapper","argsIndex","argsLength","leftIndex","leftLength","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","indexOf","tag","name","message","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatRest","flatten","isArguments","isIndex","type","test","isIterateeCall","nativeKeysIn","otherArgs","compact","Boolean","concat","findIndex","toInteger","flattenDeep","head","isReflexive","last","slice","chain","tap","interceptor","thru","wrapperChain","wrapperValue","every","guard","forEach","map","size","some","sortBy","sort","criteria","before","bind","defer","delay","toNumber","negate","once","isLength","isBoolean","isDate","isEmpty","isString","splice","isEqual","isNaN","isNumber","isNull","isRegExp","isUndefined","toArray","Number","assignIn","properties","keysIn","propsIndex","propsLength","has","path","pick","paths","defaultValue","escape","string","matches","mixin","methodNames","isFunc","methodName","noConflict","uniqueId","prefix","min","first","String","chainName","retUnwrapped","toJSON","valueOf","define","amd"],"mappings":"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","file":"jquery.jquery-orgchart.js","sourcesContent":["/*! jQuery Orgchart - v0.1.0 - 2018-06-27\n* git@github.com:wenchangshou2/jquery-orgchart.git\n* Copyright (c) 2018 wcs; Licensed MIT */\n(function ($) {\n\n  var funcFactory = {\n    dom: buildNode,\n    json: jsonBuildNode\n  };\n\n  function baseAssignValue(object, key, value) {\n    if (key === '__proto__') {\n      Object.defineProperty(object, key, {\n        'configurable': true,\n        'enumerable': true,\n        'value': value,\n        'writable': true\n      });\n    } else {\n      object[key] = value;\n    }\n  }\n\n  function groupBy(collection, iteratee) {\n    return _.reduce(collection, function (result, value, key) {\n      key = iteratee(value);\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n      return result;\n    }, {});\n  }\n\n  var smartArrayToTree = function (array, options) {\n    options = Object.assign({\n      id: 'id',\n      pid: 'pid',\n      children: 'children',\n      firstPid: null\n    }, options);\n    var groupArray = groupBy(array, function (n) {\n      console.log('n', n);\n      return n[options.pid];\n    });\n    console.log('array', groupArray);\n    var firstArray = groupArray[options.firstPid];\n    transform(firstArray);\n\n    function transform(startList) {\n      if (startList) {\n        for (var i = 0; i < startList.length; i++) {\n          // groupArray[startList[i][options.id]] && (startList[i][options.children] = groupArray[startList[i][options.id]]);\n          if (groupArray[startList[i][options.id]]) {\n            startList[i][options.children] = groupArray[startList[i][options.id]];\n          }\n          transform(startList[i][options.children]);\n        }\n      }\n    }\n    return firstArray;\n  };\n\n  // Static method.\n  $.fn.orgchart = function (options) {\n    var opts = $.extend({}, $.fn.orgchart.defaults, options);\n    var func = funcFactory[opts.renderType];\n    if (opts.renderType === 'dom') {\n      return this.each(function () {\n        var $chartSource = $(this);\n        var $this = $chartSource.clone();\n        if (opts.levels > -1) {\n          $this.find(\"ul\").andSelf().filter(function () {\n            return $chartSource.parsents(\"ul\").length + 1 > opts.levelobjects;\n          }).remove();\n        }\n        $this.data(\"chart-source\", $chartSource);\n        var $container = $(\"<div class='\" + opts.chartClass + \"'/>\");\n        if (opts.interactive) {\n          $container.addClass(\"interactive\");\n        }\n        var $root;\n        if ($this.is(\"ul\")) {\n          $root = $this.find(\"li:first\");\n        } else if ($this.is(\"li\")) {\n          $root = $this;\n        }\n        if ($root) {\n          // func(opts.renderData, $container, 0, 0, opts);\n          $container.find(\"div.node a\").click(function (evt) {\n            evt.stopImmediatePropagation();\n          });\n          if (opts.replace) {\n            opts.container.empty();\n          }\n          opts.container.append($container);\n        }\n      });\n    } else if (opts.renderType === 'json') {\n      return this.each(function () {\n        var $container = $(\"<div class='\" + opts.chartClass + \"'/>\");\n        if (opts.interactive) {\n          $container.addClass(\"interactive\");\n        }\n        var $root;\n        $root = opts.renderData.filter((item) => {\n          return item.pid === null;\n        });\n        if ($root.length>0) {\n          opts.renderData = smartArrayToTree(opts.renderData);\n          func(opts.renderData, $container, 0, 0, opts);\n          $container.find(\"div.node a\").click(function (evt) {\n            evt.stopImmediatePropagation();\n          });\n          if (opts.replace) {\n            opts.container.empty();\n          }\n          $(this).append($container);\n        }\n      });\n    }\n  };\n\n  $.fn.orgchart.defaults = {\n    container: $(\"body\"),\n    depth: -1,\n    levels: -1,\n    showLevels: -1,\n    stack: false,\n    chartClass: \"orgChart\",\n    hoverClass: \"hover\",\n    nodeText: function ($node) {\n      return $node.clone().children(\"ul,li\").remove().end().html();\n    },\n    isArray: function (arr) {\n      return Array.isArray(arr);\n    },\n    interactive: false,\n    fade: false,\n    speed: \"slow\",\n    nodeClicked: function ($node) {\n      console.log($node);\n    },\n    copyClasses: true,\n    copyData: true,\n    copyStyles: true,\n    copyTitle: true,\n    replace: true,\n    renderType: 'dom',\n    renderData: [],\n  };\n\n\n\n  function jsonBuildNode($data, $appendTo, level, index, opts) {\n    var $table = $(\"<table cellpadding='0' cellspacing='0' border='0'/>\");\n    var $tbody = $(\"<tbody/>\");\n    var $nodeRow = $(\"<tr/>\").addClass(\"nodes\");\n    var $nodeCell = $(\"<td/>\").addClass(\"node\");\n    $data = Array.isArray($data) ? $data[0] : $data;\n    var $childNodes = $.extend(true, {}, $data.children);\n    if ($data.children && $data.children.length > 0) {\n      $nodeCell.attr(\"colspan\", Object.keys($childNodes).length * 2);\n    }\n    var $adjunct = $data.adjunct;\n    if ($adjunct) {\n      var $adjunctDiv = $(\"<div>\").addClass(\"adjunct node\")\n        .addClass(\"level\" + level).addClass(\"node\" + index)\n        .addClass(\"level\" + level + \"-node\" + index)\n        .append($adjunct);\n      $adjunctDiv.appendTo($nodeCell);\n      var $linkDiv = $(\"<div>\").addClass(\"adjunct-link\");\n      $linkDiv.appendTo($nodeCell);\n    }\n    var $heading = $(\"<h2>\").html($data.text);\n    var $nodeDiv = $(\"<div>\").addClass(\"node\")\n      .addClass(\"level\" + level)\n      .addClass(\"node\" + index)\n      .addClass(\"level\" + level + \"-node\" + index)\n      .append($heading);\n\n    $nodeCell.append($nodeDiv);\n    $nodeRow.append($nodeCell);\n    $tbody.append($nodeRow);\n    if ($childNodes && Object.keys($childNodes).length > 0) {\n      if (opts.depth === -1 || level + 1 < opts.depth) {\n        var $downLineRow = $(\"<tr/>\").addClass(\"lines\");\n        var $downLineCell = $(\"<td/>\").attr(\"colspan\", Object.keys($childNodes).length * 2);\n        $downLineRow.append($downLineCell);\n        var $downLineTable = $(\"<table cellpadding='0' cellspacing='0' border='0'>\");\n        $downLineTable.append(\"<tbody>\");\n        var $downLineLine = $(\"<tr/>\").addClass(\"lines x\");\n        var $downLeft = $(\"<td>\").addClass(\"line left\");\n        var $downRight = $(\"<td>\").addClass(\"line right\");\n        $downLineLine.append($downLeft).append($downRight);\n        $downLineTable.children(\"tbody\").append($downLineLine);\n        $downLineCell.append($downLineTable);\n        $tbody.append($downLineRow);\n        $nodeDiv.addClass(\"hashChildren\");\n        if (opts.showLevels === -1 || level < opts.showLevels - 1) {\n          $nodeDiv.addClass(\"shownChildren\");\n        } else {\n          $nodeDiv.addClass(\"hiddenChildren\");\n        }\n        if (opts.interactive) {\n          $nodeDiv.hover(function () {\n            $(this).addClass(opts.hoverClass);\n          }, function () {\n            $(this).removeClass(opts.hoverClass);\n          });\n        }\n        var $linesRow = $(\"<tr/>\").addClass(\"lines v\");\n        var key;\n        for (key in $childNodes) {\n          var $left = $(\"<td/>\").addClass(\"line left top\");\n          var $right = $(\"<td/>\").addClass(\"line right top\");\n          $linesRow.append($left).append($right);\n\n        }\n        $linesRow.find(\"td:first\").removeClass(\"top\");\n        $linesRow.find(\"td:last\").removeClass(\"top\");\n        $tbody.append($linesRow);\n        var $childNodesRow = $(\"<tr/>\");\n        console.log('childnodes', $childNodes, typeof $childNodes);\n        for (key in $childNodes) {\n          console.log('key', $childNodes[key]);\n          var $td = $(\"<td/>\");\n          $td.attr(\"colspan\", 2);\n          jsonBuildNode($childNodes[key], $td, level + 1, index, opts);\n          $childNodesRow.append($td);\n          console.log('td', $td);\n          // console.log('key',key);\n        }\n        // $childNodes.each(function (index) {\n        //     console.log('this',this);\n        //     var $td = $(\"<td/>\");\n        //     $td.attr(\"colspan\", 2);\n        //     jsonBuildNode($(this), $td, level + 1, index, opts);\n        //     $childNodesRow.append($(this), $td, level + 1, index, opts);\n        //     $childNodesRow.append($td);\n        // });\n        $tbody.append($childNodesRow);\n      } else if (opts.stack) {\n        var $stackNodes = $childNodes.clone();\n        var $list = $(\"<ul class='stack'>\").append($stackNodes).addClass(\"level\" + level).addClass(\"node\" + index).addClass(\"level\" + level + \"-node\" + index);\n        var $stackContainer = $(\"<div class='stack-container'>\").append($list);\n        $nodeDiv.after($stackContainer);\n      }\n    }\n\n    if (opts.showLevels > -1 && level >= opts.showLevels - 1) {\n      $nodeRow.nextAll(\"tr\").hide();\n    }\n\n    $table.append($tbody);\n    $appendTo.append($table);\n    // var $childNodes=$\n  }\n\n  function buildNode($node, $appendTo, level, index, opts) {\n    var $table = $(\"<table cellpadding='0' cellspacing='0' border='0'/>\");\n    var $tbody = $(\"<tbody/>\");\n    var $nodeRow = $(\"<tr/>\").addClass(\"nodes\");\n    var $nodeCell = $(\"<td/>\").addClass(\"node\").attr(\"colspan\", 2);\n    var $childNodes = $node.children(\"ul:first\").children(\"li\");\n    if ($childNodes.length > 1) {\n      $nodeCell.attr(\"colspan\", $childNodes.length * 2);\n    }\n    var $adjunct = $node.children(\"adjunct\").eq(0);\n    if ($adjunct.length > 0) {\n      var $adjunctDiv = $(\"<div>\").addClass(\"adjunct node\")\n        .addClass(\"level\" + level).addClass(\"node\" + index)\n        .addClass(\"level\" + level + \"-node\" + index)\n        .append(opts.nodeText($adjunct));\n      $adjunctDiv.appendTo($nodeCell);\n      var $linkDiv = $(\"<div>\").addClass(\"adjunct-link\");\n      $linkDiv.appendTo($nodeCell);\n      $adjunct.remove();\n    }\n\n    var $heading = $(\"<h2>\").html(opts.nodeText($node));\n    var $nodeDiv = $(\"<div>\").addClass(\"node\")\n      .addClass(\"level\" + level)\n      .addClass(\"node\" + index)\n      .addClass(\"level\" + level + \"-node\" + index)\n      .append($heading);\n    //从源列表 chart结点复制class\n    if (opts.copyClasses) {\n      $nodeDiv.addClass($node.attr(\"class\"));\n    }\n    //将数据从源列表复制到图表节点\n    if (opts.copyData) {\n      console.log('data', $node.data());\n      $nodeDiv.data($node.data());\n    }\n\n    //将样式从源列表复制到图表节点\n    if (opts.copyStyles) {\n      $nodeDiv.attr(\"style\", $node.attr(\"style\"));\n    }\n    //将标题从源列表复制到图表结点\n    if (opts.copyTitle) {\n      console.log('title', $node.attr('title'));\n      $nodeDiv.attr(\"title\", $node.attr(\"title\"));\n    }\n    $nodeDiv.data(\"orgchart-level\", level).data(\"orgchart-node\", $node);\n    $nodeCell.append($nodeDiv);\n    $nodeRow.append($nodeCell);\n    $tbody.append($nodeRow);\n    $nodeDiv.click(function () {\n      var $this = $(this);\n      opts.nodeClicked($this.data(\"orgchart-node\"), $this);\n      if (opts.interactive) {\n        var $row = $this.closest(\"tr\");\n        if ($row.next(\"tr\").is(\":visible\")) {\n          if (opts.fade) {\n            $row.nextAll(\"tr\").fadeOut(opts.speed);\n          } else {\n            $row.nextAll(\"tr\").hide();\n          }\n          $this.removeClass(\"shownChildren\").addClass(\"hiddenChildren\");\n        } else {\n          $this.removeClass(\"hiddenChildren\").addClass(\"shownChildren\");\n          if (opts.fade) {\n            $row.nextAll(\"tr\").fadeIn(opts.speed);\n          } else {\n            $row.nextAll(\"tr\").show();\n          }\n        }\n      }\n    });\n    if ($childNodes.length > 0) {\n      if (opts.depth === -1 || level + 1 < opts.depth) {\n        var $downLineRow = $(\"<tr/>\").addClass(\"lines\");\n        var $downLineCell = $(\"<td/>\").attr(\"colspan\", $childNodes.length * 2);\n        $downLineRow.append($downLineCell);\n\n        var $downLineTable = $(\"<table cellpadding='0' cellspacing='0' border='0'>\");\n        $downLineTable.append(\"<tbody>\");\n        var $downLineLine = $(\"<tr/>\").addClass(\"lines x\");\n        var $downLeft = $(\"<td>\").addClass(\"line left\");\n        var $downRight = $(\"<td>\").addClass(\"line right\");\n        $downLineLine.append($downLeft).append($downRight);\n        $downLineTable.children(\"tbody\").append($downLineLine);\n        $downLineCell.append($downLineTable);\n\n        $tbody.append($downLineRow);\n\n        if ($childNodes.length > 0) {\n          $nodeDiv.addClass(\"hasChildren\");\n          if (opts.showLevels === -1 || level < opts.showLevels - 1) {\n            $nodeDiv.addClass(\"shownChildren\");\n          } else {\n            $nodeDiv.addClass(\"hiddenChildren\");\n          }\n          if (opts.interactive) {\n            $nodeDiv.hover(function () {\n              $(this).addClass(opts.hoverClass);\n            }, function () {\n              $(this).removeClass(opts.hoverClass);\n            });\n          }\n        }\n\n        // Recursively make child nodes...\n        var $linesRow = $(\"<tr/>\").addClass(\"lines v\");\n        $childNodes.each(function () {\n          var $left = $(\"<td/>\").addClass(\"line left top\");\n          var $right = $(\"<td/>\").addClass(\"line right top\");\n          $linesRow.append($left).append($right);\n        });\n        $linesRow.find(\"td:first\").removeClass(\"top\");\n        $linesRow.find(\"td:last\").removeClass(\"top\");\n        $tbody.append($linesRow);\n        var $childNodesRow = $(\"<tr/>\");\n        $childNodes.each(function (index) {\n          var $td = $(\"<td/>\");\n          $td.attr(\"colspan\", 2);\n          buildNode($(this), $td, level + 1, index, opts);\n          $childNodesRow.append($td);\n        });\n        $tbody.append($childNodesRow);\n      } else if (opts.stack) {\n        var $stackNodes = $childNodes.clone();\n        var $list = $(\"<ul class='stack'>\").append($stackNodes).addClass(\"level\" + level).addClass(\"node\" + index).addClass(\"level\" + level + \"-node\" + index);\n        var $stackContainer = $(\"<div class='stack-container'>\").append($list);\n        $nodeDiv.after($stackContainer);\n      }\n    }\n\n    if (opts.showLevels > -1 && level >= opts.showLevels - 1) {\n      $nodeRow.nextAll(\"tr\").hide();\n    }\n    $table.append($tbody);\n    $appendTo.append($table);\n  }\n\n}(jQuery));\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n"]}